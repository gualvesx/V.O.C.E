rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // ================================================================
    //   Funções Auxiliares
    // ================================================================
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Verifica se o utilizador logado é o dono do documento
    function isOwner(docData) {
      return request.auth.uid == docData.owner_id;
    }

    // Verifica se o utilizador logado está na lista de membros
    function isMember(docData) {
      return request.auth.uid in docData.member_ids;
    }

    // ================================================================
    //   Regras para cada Coleção
    // ================================================================

    match /professors/{profId} {
      // Qualquer professor autenticado pode ler a lista de outros professores.
      allow read: if isAuthenticated();
      // Um professor só pode editar o seu próprio perfil.
      allow update: if request.auth.uid == profId;
      // Qualquer um pode criar um perfil (cadastro).
      allow create: if true; 
    }
    
    match /students/{studentId} {
      // Qualquer professor autenticado pode gerir a lista de alunos.
      allow read, create, update, delete: if isAuthenticated();
    }
    
    match /classes/{classId} {
      // Um membro da turma pode ler os dados.
      allow read: if isAuthenticated() && isMember(resource.data);
      
      // Apenas o dono pode apagar a turma.
      allow delete: if isAuthenticated() && isOwner(resource.data);
      
      // Um utilizador autenticado pode criar uma turma (o backend garante que ele é o dono).
      allow create: if isAuthenticated();
      
      // Um membro pode atualizar o nome e a lista de alunos.
      // Apenas o dono pode atualizar a lista de membros (partilhar).
      allow update: if isAuthenticated() && isMember(resource.data);
    }
    
    match /logs/{logId} {
      // Qualquer professor autenticado pode ler os logs.
      allow read: if isAuthenticated();
      // A escrita é bloqueada do lado do cliente para segurança.
      allow write: if false; 
    }
  }
}


<!DOCTYPE html>
<html lang="pt-br">
    <head>
        <%- include('partials/header') %>
        </head>
<body class="bg-gray-100 flex flex-col min-h-screen">
    <header class="bg-white shadow-md border-b-2 border-gray-100">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex justify-between items-center h-20">
            <a href="/"><img src="https://upload.wikimedia.org/wikipedia/commons/8/8c/SENAI_S%C3%A3o_Paulo_logo.png" alt="Logo SENAI" class="h-10"></a>
        </div>
    </header>

    <main class="flex-grow flex items-center justify-center py-12 px-4">
        <div class="max-w-md w-full bg-white p-8 rounded-xl shadow-2xl border-t-4 border-red-700">
            <h2 class="text-center text-2xl font-bold text-gray-900">Acessar o Painel</h2>
            <p class="mt-2 text-center text-sm text-gray-600">Bem-vindo de volta! Faça o login para continuar.</p>

            <% if (typeof message !== 'undefined' && message) { %>
                <div id="success-message" class="bg-green-100 border border-green-200 rounded-lg p-4 my-4">
                    <p class="text-sm text-green-700"><%= message %></p>
                </div>
            <% } %>

            <div id="error-message" class="hidden bg-red-100 border border-red-200 rounded-lg p-4 my-4">
                <p class="text-sm text-red-700"></p>
            </div>

            <form class="mt-8 space-y-6" id="loginForm">
                <div class="space-y-4">
                    <div>
                        <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                        <input id="email" name="email" type="email" required class="mt-1 form-input" placeholder="Digite seu email">
                    </div>
                    <div>
                        <label for="password" class="block text-sm font-medium text-gray-700">Senha</label>
                        <input id="password" name="password" type="password" required class="mt-1 form-input" placeholder="Digite sua senha">
                    </div>
                </div>
                <div class="pt-2">
                    <button type="submit" class="btn-submit">Entrar no Sistema</button>
                </div>
                <div class="flex justify-between items-center text-sm mt-4">
                    <p class="text-gray-600">
                        Não tem uma conta? 
                        <a href="/cadastro" class="font-medium text-red-700 hover:text-red-800">Cadastre-se!</a>
                    </p>
                    <a href="#" id="forgotPasswordLink" class="font-medium text-red-700 hover:text-red-800">Esqueceu a senha?</a>
                </div>
            </form>
        </div>
    </main>
    
    <!-- Modal de Redefinição de Senha -->
    <div id="resetPasswordModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center">
        <div class="relative mx-auto p-8 border w-96 shadow-lg rounded-md bg-white">
            <h3 class="text-lg font-medium text-gray-900">Redefinir Senha</h3>
            <div class="mt-4">
                <p class="text-sm text-gray-600 mb-4">Por favor, insira o seu email para enviarmos um link de redefinição de senha.</p>
                <form id="resetPasswordForm">
                    <label for="resetEmail" class="block text-sm font-medium text-gray-700">Email</label>
                    <input type="email" id="resetEmail" required class="mt-1 form-input">
                    <div class="flex justify-end gap-4 mt-6">
                        <button type="button" id="cancelReset" class="px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300">Cancelar</button>
                        <button type="submit" class="px-4 py-2 bg-red-700 text-white rounded hover:bg-red-800">Enviar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <footer class="bg-red-700 text-white mt-auto">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6 text-center">
            <p>&copy; <%= new Date().getFullYear() %> SENAI - Todos os direitos reservados.</p>
        </div>
    </footer>
    
    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js";
        import { getAuth, signInWithEmailAndPassword, sendPasswordResetEmail } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-auth.js";
        
        const firebaseConfig = {
            apiKey: "AIzaSyDznqrm2kJfKQXxWpgHWwk-msXH89OEgTo",
            authDomain: "banco-vc.firebaseapp.com",
            projectId: "banco-vc",
            storageBucket: "banco-vc.appspot.com",
            messagingSenderId: "858410245985",
            appId: "1:858410245985:web:56fae7da4c145c30a32f20",
            measurementId: "G-4E7K9TY3B7"
        };

        const app = initializeApp(firebaseConfig);
        const auth = getAuth(app);

        const loginForm = document.getElementById('loginForm');
        const errorMessageDiv = document.getElementById('error-message');
        const successMessageDiv = document.getElementById('success-message');

        loginForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            errorMessageDiv.classList.add('hidden');
            if (successMessageDiv) successMessageDiv.classList.add('hidden');
            
            const email = loginForm.email.value;
            const password = loginForm.password.value;

            try {
                const userCredential = await signInWithEmailAndPassword(auth, email, password);
                const idToken = await userCredential.user.getIdToken();
                
                const response = await fetch('/sessionLogin', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ idToken })
                });

                if (!response.ok) {
                   const errorData = await response.json();
                   throw new Error(errorData.error || 'Falha ao criar sessão no servidor.');
                }
                
                window.location.href = '/dashboard';

            } catch (error) {
                let friendlyMessage = 'Email ou senha inválidos.';
                if (error.message.includes('Falha ao criar sessão')) {
                    friendlyMessage = 'Falha ao criar sessão no servidor. Contacte o suporte.';
                }
                console.error("Erro no login:", error);
                errorMessageDiv.querySelector('p').textContent = friendlyMessage;
                errorMessageDiv.classList.remove('hidden');
            }
        });

        // [MELHORIA 3] Lógica do Modal de Redefinição de Senha com SweetAlert
        const forgotPasswordLink = document.getElementById('forgotPasswordLink');
        const resetModal = document.getElementById('resetPasswordModal');
        const cancelResetBtn = document.getElementById('cancelReset');
        const resetForm = document.getElementById('resetPasswordForm');

        forgotPasswordLink.addEventListener('click', (e) => {
            e.preventDefault();
            resetModal.classList.remove('hidden');
        });

        cancelResetBtn.addEventListener('click', () => {
            resetModal.classList.add('hidden');
        });

        resetForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const email = document.getElementById('resetEmail').value;
            try {
                // Tenta enviar o e-mail de redefinição
                await sendPasswordResetEmail(auth, email);
                resetModal.classList.add('hidden');
                Swal.fire({
                    icon: 'success',
                    title: 'Enviado!',
                    text: 'Se o e-mail estiver cadastrado, um link de redefinição foi enviado. Verifique sua caixa de entrada e pasta de spam.'
                });
            } catch (error) {
                console.error("Erro ao enviar email de redefinição:", error.code);
                
                // Verifica o código de erro específico do Firebase para "usuário não encontrado"
                if (error.code === 'auth/user-not-found') {
                    Swal.fire({
                        icon: 'error',
                        title: 'E-mail não encontrado',
                        text: 'Este e-mail não está cadastrado em nosso sistema. Verifique o endereço digitado.'
                    });
                } else {
                    // Para outros erros (ex: rede, formato de e-mail inválido)
                    Swal.fire({
                        icon: 'error',
                        title: 'Falha ao Enviar',
                        text: 'Não foi possível enviar o e-mail. Verifique se o endereço está correto e tente novamente.'
                    });
                }
            }
        });
        // [FIM DA MELHORIA 1]
    </script>
</body>
</html>

